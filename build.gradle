/*
 * Copyright (c) 2020 Kaiserpfalz EDV-Service, Roland T. Lichti
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

plugins {
    id 'org.asciidoctor.convert' version '1.5.6' apply false
}

allprojects {
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    group = 'de.kaiserpfalz-edv.commons'
    version = '2.0.0-SNAPSHOT'
}

configure(subprojects.findAll { it.name != 'docs' }) {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    dependencies {
        api platform('io.quarkus:quarkus-universe-bom:1.7.0.Final')
        api 'org.slf4j:slf4j-api:1.7.30'
        api 'io.quarkus:quarkus-jackson:1.7.0.Final'

        implementation platform('io.quarkus:quarkus-universe-bom:1.7.0.Final')
        implementation 'com.vdurmont:semver4j:3.1.0'
        implementation 'org.immutables:value:2.8.8'

        annotationProcessor 'org.immutables:value:2.8.8'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
        testImplementation 'org.mockito:mockito-all:1.10.19'

        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
        testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-parameters'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        withJavadocJar()
        withSourcesJar()
    }

    test {
        useJUnitPlatform()
    }

    publishing {
        publications {
            myLibrary(MavenPublication) {
                from components.java
            }
        }
    }
}

configure(subprojects.findAll { it.name != 'kp-commons-api' && it.name != 'docs' }) {
    dependencies {
        implementation project(':kp-commons-api')
    }
}
